"use strict";(self.webpackChunkastria_docs_2=self.webpackChunkastria_docs_2||[]).push([[1213],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),p=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(a),m=n,f=u["".concat(o,".").concat(m)]||u[m]||d[m]||l;return a?r.createElement(f,i(i({ref:t},c),{},{components:a})):r.createElement(f,i({ref:t},c))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:n,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1277:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>y,frontMatter:()=>s,metadata:()=>p,toc:()=>u});var r=a(7462),n=(a(7294),a(3905));a(4996);const l=a.p+"assets/images/upscale-input-179b70105f9adc67180b6789f7f56553.jpg",i=a.p+"assets/images/upscale-result-3a748db52d0105807252262fcdfc5d05.jpg",s={hide_table_of_contents:!0},o="Upscale",p={unversionedId:"use-cases/upscale",id:"use-cases/upscale",title:"Upscale",description:"BETA",source:"@site/docs/use-cases/upscale.md",sourceDirName:"use-cases",slug:"/use-cases/upscale",permalink:"/docs/use-cases/upscale",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/use-cases/upscale.md",tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"Masked portraits",permalink:"/docs/use-cases/masked-portraits"},next:{title:"Features",permalink:"/docs/category/features"}},c={},u=[{value:"Overview",id:"overview",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2},{value:"POST /tunes/:id/prompts",id:"post-tunesidprompts",level:4}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},m=d("Tabs"),f=d("TabItem"),g={toc:u},h="wrapper";function y(e){let{components:t,...s}=e;return(0,n.kt)(h,(0,r.Z)({},g,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"upscale"},"Upscale"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"BETA")),(0,n.kt)("div",{style:{display:"grid","grid-template-columns":"1fr 1fr",gap:"1.5rem"}},(0,n.kt)("div",null,(0,n.kt)("figcaption",null,"Low-res input"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"upscale-input",src:a(7209).Z,width:"1152",height:"768"}))),(0,n.kt)("div",null,(0,n.kt)("figcaption",null,(0,n.kt)("a",{href:"https://www.astria.ai/gallery?text=only_upscale"},"Upscaled result")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"upscale-result",src:a(4567).Z,width:"2048",height:"1366"})))),(0,n.kt)("div",{style:{display:"grid","grid-template-columns":"1fr 1fr",gap:"1.5rem"}},(0,n.kt)("div",null,(0,n.kt)("figcaption",null,"Low-res input"),(0,n.kt)("div",{style:{backgroundImage:"url("+l+")",backgroundPosition:"50% 20%",backgroundSize:3e3,width:"100%",height:300}})),(0,n.kt)("div",null,(0,n.kt)("figcaption",null,(0,n.kt)("a",{href:"https://www.astria.ai/gallery?text=only_upscale"},"Upscaled result")),(0,n.kt)("div",{style:{backgroundImage:"url('"+i+"')",backgroundPosition:"50% 20%",backgroundSize:3e3,width:"100%",height:300}}))),(0,n.kt)("div",{className:"api-method"},(0,n.kt)("div",null,(0,n.kt)("p",null,"See example prompts in the ",(0,n.kt)("a",{parentName:"p",href:"https://www.astria.ai/gallery?text=only_upscale"},"gallery")),(0,n.kt)("h2",{id:"overview"},"Overview"),(0,n.kt)("p",null,"Upscaling uses model and text guidance to add details to original image. Depending on the ",(0,n.kt)("inlineCode",{parentName:"p"},"denoising_strength")," the model can hallucinate more details shifting away from the original image. "),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"In the ",(0,n.kt)("a",{parentName:"li",href:"https://www.astria.ai/prompts"},"prompts")," generate page - Set an input image in the Controlnet/img2img section."),(0,n.kt)("li",{parentName:"ol"},"Add a text prompt ending with ",(0,n.kt)("inlineCode",{parentName:"li"},"--only_upscale")),(0,n.kt)("li",{parentName:"ol"},"Select a model from the dropdown that matches the style and content of the input image.")),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("p",null,"Example prompt for the result above"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-text"},"very detailed, masterpiece, intricate details, UHD, 8K --only_upscale <lora:add_detail:1>\nnum_images=1\nnegative_prompt=lowres, medium quality, lack of details, bad quality, worst quality, blur, blurry, pixelated, jpeg artifacts\nseed=\nsteps=30\ncfg_scale=\ncontrolnet=\ninput_image_url=https://sdbooth2-production.s3.amazonaws.com/cvrx6g5wx5tbiuz9ivoah1j19why\nmask_image_url=\ndenoising_strength=0.6\ncontrolnet_conditioning_scale=\ncontrolnet_txt2img=false\nsuper_resolution=false\ninpaint_faces=false\nface_correct=false\nfilm_grain=false\nface_swap=false\nhires_fix=false\nprompt_expansion=false\nar=1:1\nscheduler=dpm++sde_karras\ncolor_grading=\nuse_lpw=true\nw=\nh=\n"))),(0,n.kt)("div",null,(0,n.kt)("h4",{id:"post-tunesidprompts"},"POST /tunes/:id/prompts"),(0,n.kt)(m,{groupId:"lang",mdxType:"Tabs"},(0,n.kt)(f,{value:"curl",label:"cURL",default:!0,mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},'# Note the hard-coded 690204 which is the tune_id of Realistic Vision v5.1 from the gallery\ncurl -X POST -H "Authorization: Bearer $API_KEY" https://api.astria.ai/tunes/690204/prompts \\\n          -F prompt[text]=very detailed, masterpiece, intricate details, UHD, 8K --only_upscale <lora:add_detail:1>" \\\n          -F prompt[negative_prompt]="lowres, medium quality, lack of details, bad quality, worst quality, blur, blurry, pixelated, jpeg artifacts" \\\n          -F prompt[callback]="https://optional-callback-url.com/to-your-service-when-ready?prompt_id=1" \n'))),(0,n.kt)(f,{value:"javascript",label:"Node.js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"const fetch = require('node-fetch');\nconst FormData = require('form-data');\n\n// Note the hard-coded 690204 which is the tune_id of Realistic Vision v5.1 from the gallery\nconst API_URL = 'https://api.astria.ai/tunes/690204/prompts';\nconst API_KEY = 'YOUR_API_KEY'; // Replace with your actual API key\nconst headers = { Authorization: `Bearer ${API_KEY}` }\n\nconst form = new FormData();\nform.append('prompt[text]', 'very detailed, masterpiece, intricate details, UHD, 8K --only_upscale <lora:add_detail:1>');\nform.append('prompt[negative_prompt]', 'lowres, medium quality, lack of details, bad quality, worst quality, blur, blurry, pixelated, jpeg artifacts');\nform.append('prompt[callback]', 'https://optional-callback-url.com/to-your-service-when-ready?prompt_id=1');\n\nfetch(API_URL, {\n  method: 'POST',\n  headers: headers,\n  body: form\n}).then(response => response.json())\n\n\n"))),(0,n.kt)(f,{value:"python",label:"Python",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"import requests\n\n# Note the hard-coded 690204 which is the tune_id of Realistic Vision v5.1 from the gallery\nAPI_URL = 'https://api.astria.ai/tunes/690204/prompts'\nAPI_KEY = 'YOUR_API_KEY'  # Replace with your actual API key\n\nheaders = {\n    'Authorization': f'Bearer {API_KEY}'\n}\n\ndata = {\n  'prompt[text]': 'very detailed, masterpiece, intricate details, UHD, 8K --only_upscale <lora:add_detail:1>',\n  'prompt[negative_prompt]': 'lowres, medium quality, lack of details, bad quality, worst quality, blur, blurry, pixelated, jpeg artifacts',\n  'prompt[callback]': 'https://optional-callback-url.com/to-your-service-when-ready?prompt_id=1'\n}\nfiles = []\nfiles.append((f\"tune[prompts_attributes][{i}][input_image]\", load_image(prompt['input_image'])))\n\n\nresponse = requests.post(API_URL, headers=headers, data=data)\n")))))))}y.isMDXComponent=!0},7209:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/upscale-input-179b70105f9adc67180b6789f7f56553.jpg"},4567:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/upscale-result-3a748db52d0105807252262fcdfc5d05.jpg"}}]);