"use strict";(self.webpackChunkastria_docs_2=self.webpackChunkastria_docs_2||[]).push([[8500],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(a),d=r,h=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(7462),r=a(7294),o=a(6010),i=a(2466),s=a(6550),l=a(1980),c=a(7392),u=a(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=m(e),[i,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[l,c]=h({queryString:a,groupId:n}),[p,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,u.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),b=(()=>{const e=l??p;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&s(b)}),[b]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),c(e),f(e)}),[c,f,o]),tabValues:o}}var b=a(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:a,selectedValue:s,selectValue:l,tabValues:c}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),m=e=>{const t=e.currentTarget,a=u.indexOf(t),n=c[a].value;n!==s&&(p(t),l(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:d,onClick:m},i,{className:(0,o.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":s===t})}),a??t)})))}function y(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},r.createElement(k,(0,n.Z)({},e,t)),r.createElement(y,(0,n.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},2948:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var n=a(7462),r=(a(7294),a(3905)),o=a(4866),i=a(5162);const s={title:"Create a tune from a pack",hide_table_of_contents:!0},l=void 0,c={unversionedId:"api/pack/tunes/create",id:"api/pack/tunes/create",title:"Create a tune from a pack",description:"Creates a new fine-tune model from training images according to the pack base tune id, model type and adds prompts to generate images.",source:"@site/docs/api/2-pack/2-tunes/0-create.md",sourceDirName:"api/2-pack/2-tunes",slug:"/api/pack/tunes/create",permalink:"/docs/api/pack/tunes/create",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Create a tune from a pack",hide_table_of_contents:!0},sidebar:"tutorialSidebar",previous:{title:"Pack tunes",permalink:"/docs/category/pack-tunes"},next:{title:"Likes",permalink:"/docs/category/likes"}},u={},p=[{value:"Parameters",id:"parameters",level:3},{value:"<code>name</code> (required)",id:"name-required",level:4},{value:"<code>title</code> (required)",id:"title-required",level:4},{value:"<code>images</code> (required)",id:"images-required",level:4},{value:"<code>image_urls</code> (required)",id:"image_urls-required",level:4},{value:"<code>callback</code> (optional)",id:"callback-optional",level:4},{value:"<code>characteristics</code> (optional)",id:"characteristics-optional",level:4},{value:"<code>prompts_attributes.callback</code> (optional)",id:"prompts_attributescallback-optional",level:4},{value:"Returns",id:"returns",level:3},{value:"POST /p/:pack_id/tunes",id:"post-ppack_idtunes",level:4},{value:"Response",id:"response",level:4}],m={toc:p},d="wrapper";function h(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"api-method"},(0,r.kt)("div",null,(0,r.kt)("p",null,"Creates a new fine-tune model from training images according to the pack base tune id, model type and adds prompts to generate images."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("h4",{id:"name-required"},(0,r.kt)("inlineCode",{parentName:"h4"},"name")," (required)"),(0,r.kt)("p",null,"A class name the describes the fine-tune. e.g: ",(0,r.kt)("inlineCode",{parentName:"p"},"man"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"woman"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"cat"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"dog"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"boy"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"girl"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"style"),". Class name must be supported by pack."),(0,r.kt)("h4",{id:"title-required"},(0,r.kt)("inlineCode",{parentName:"h4"},"title")," (required)"),(0,r.kt)("p",null,"Describes the fine-tune. Ideally a UUID related to the transaction. See ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/overview"},"idempotency")," for more information."),(0,r.kt)("h4",{id:"images-required"},(0,r.kt)("inlineCode",{parentName:"h4"},"images")," (required)"),(0,r.kt)("p",null,"An array of images to train the fine-tune with. The images can be uploaded as multipart/form-data or as image_urls."),(0,r.kt)("h4",{id:"image_urls-required"},(0,r.kt)("inlineCode",{parentName:"h4"},"image_urls")," (required)"),(0,r.kt)("p",null,"An array of images to train the fine-tune with. The images can be uploaded as multipart/form-data or as image_urls."),(0,r.kt)("h4",{id:"callback-optional"},(0,r.kt)("inlineCode",{parentName:"h4"},"callback")," (optional)"),(0,r.kt)("p",null,"A webhook URL to be called when the tune is finished training. The webhook will receive a POST request with the tune object. See ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/overview#callbacks"},"more on callbacks"),"."),(0,r.kt)("h4",{id:"characteristics-optional"},(0,r.kt)("inlineCode",{parentName:"h4"},"characteristics")," (optional)"),(0,r.kt)("p",null,"A free-form object that can be used to templatize the prompts text. e.g: ",(0,r.kt)("inlineCode",{parentName:"p"},'{"eye_color": "blue eyes"}')," would than be used in the prompt text as ",(0,r.kt)("inlineCode",{parentName:"p"},"ohwx woman, {{eye_color}}, holding flowers"),"."),(0,r.kt)("h4",{id:"prompts_attributescallback-optional"},(0,r.kt)("inlineCode",{parentName:"h4"},"prompts_attributes.callback")," (optional)"),(0,r.kt)("p",null,"A webhook URL to be called when each prompt is finished inference. The webhook will receive a POST request with the prompt object. See ",(0,r.kt)("a",{parentName:"p",href:"/docs/api/overview#callbacks"},"more on callbacks"),"."),(0,r.kt)("h3",{id:"returns"},"Returns"),(0,r.kt)("p",null,"Returns a tune object if successful which will start training immediately and call callback once training is complete.")),(0,r.kt)("div",null,(0,r.kt)("h4",{id:"post-ppack_idtunes"},"POST /p/:pack_id/tunes"),(0,r.kt)(o.Z,{groupId:"lang",mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"curl",label:"cURL",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"showLineNumbers",showLineNumbers:!0},'# With images as multipart/form-data\n# Hard coded pack id 43 for corporate headshots from the gallery - https://www.astria.ai/gallery/packs \n# https://www.astria.ai/gallery/tunes/690204/prompts\ncurl -X POST -H "Authorization: Bearer $API_KEY" https://api.astria.ai/p/43/tunes \\\n          -F tune[title]="John Doe - UUID - 1234-6789-1234-56789" \\\n          -F tune[name]=man \\\n          -F tune[callback]="https://optional-callback-url.com/webhooks/astria?user_id=1" \\\n          -F tune[characteristics][eye_color]="blue eyes" \\\n          -F tune[prompt_attributes][callback]="https://optional-callback-url.com/webhooks/astria_prompts?user_id=1" \\\n          -F "tune[images][]=@1.jpg" \\\n          -F "tune[images][]=@2.jpg" \\\n          -F "tune[images][]=@3.jpg" \\\n          -F "tune[images][]=@4.jpg"\n\n# With image_urls as form-data\ncurl -X POST -H "Authorization: Bearer $API_KEY" https://api.astria.ai/p/43/tunes \\\n          -F tune[title]="Grumpy cat - UUID - 1234-6789-1234-56789" \\\n          -F tune[name]=cat \\\n          -F tune[callback]="https://optional-callback-url.com/to-your-service-when-ready?user_id=1" \\\n          -F tune[prompt_attributes][callback]="https://optional-callback-url.com/webhooks/astria_prompts?user_id=1" \\\n          -F "tune[image_urls][]=https://i.imgur.com/HLHBnl9.jpeg" \\\n          -F "tune[image_urls][]=https://i.imgur.com/HLHBnl9.jpeg" \\\n          -F "tune[image_urls][]=https://i.imgur.com/HLHBnl9.jpeg" \\\n          -F "tune[image_urls][]=https://i.imgur.com/HLHBnl9.jpeg"\n          \n# As JSON\ncat > data.json <<- EOM\n{\n  "tune": {\n    "title": "Grumpy Cat - UUID - 1234-6789-1234-56789",\n    "name": "cat",\n    "callback": "https://optional-callback-url.com/to-your-service-when-ready?user_id=1",\n    "characteristics": {"eye_color": "blue eyes"},\n    "prompt_attributes": {\n      "callback": "https://optional-callback-url.com/webhooks/astria_prompts?user_id=1"\n    },\n    "image_urls": [\n      "https://i.imgur.com/HLHBnl9.jpeg",\n      "https://i.imgur.com/HLHBnl9.jpeg",\n      "https://i.imgur.com/HLHBnl9.jpeg",\n      "https://i.imgur.com/HLHBnl9.jpeg"\n    ]\n  }\n}\nEOM\n\n# Hard coded pack id 43 for corporate headshots from the gallery - https://www.astria.ai/gallery/packs\ncurl -X POST -H"Content-Type: application/json" -H "Authorization: Bearer $API_KEY" --data @data.json  https://api.astria.ai/p/43/tunes          \n'))),(0,r.kt)(i.Z,{value:"javascript",label:"Node.js",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"// NodeJS 16\n// With image_urls and fetch()\n// For NodeJS 18 - do NOT import the below as it is built-in\nimport fetch from \"node-fetch\";\n\nconst API_KEY = 'sd_XXXXXX';\nconst DOMAIN = 'https://api.astria.ai';\n\nfunction createTune() {\n  let options = {\n    method: 'POST',\n    headers: { 'Authorization': 'Bearer ' + API_KEY, 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      tune: {\n        \"title\": 'John Doe - UUID - 1234-6789-1234-56789',\n        \"name\": \"cat\",\n        \"callback\": \"https://optional-callback-url.com/to-your-service-when-ready?user_id=1\",\n        \"characteristics\": {\"eye_color\": \"blue eyes\"},\n        \"prompt_attributes\": {\n          \"callback\": \"https://optional-callback-url.com/webhooks/astria_prompts?user_id=1\"\n        },\n        \"image_urls\": [\n          \"https://i.imgur.com/HLHBnl9.jpeg\",\n          \"https://i.imgur.com/HLHBnl9.jpeg\",\n          \"https://i.imgur.com/HLHBnl9.jpeg\",\n          \"https://i.imgur.com/HLHBnl9.jpeg\"\n        ]\n      }\n    })\n  };\n  // Hard coded pack id 43 for corporate headshots from the gallery - https://www.astria.ai/gallery/packs\n  return fetch(DOMAIN + '/p/43/tunes', options)\n    .then(r => r.json())\n    .then(r => console.log(r))\n}\n\ncreateTune()\n\n\n/// With form-data, fetch() and nested prompts\n// For NodeJS 18 - do NOT import the two below as they are built-in\nimport fetch from \"node-fetch\";\nimport FormData from 'form-data';\nimport fs from 'fs';\n\nconst API_KEY = 'sd_XXXX';\nconst DOMAIN = 'https://api.astria.ai';\nfunction createTune() {\n  let formData = new FormData();\n  formData.append('tune[title]', 'John Doe - UUID - 1234-6789-1234-56789');\n  formData.append('tune[name]', 'man');\n  formData.append('tune[callback]', 'https://optional-callback-url.com/webhooks/astria?user_id=1');\n  formData.append('tune[characteristics][eye_color]', 'blue eyes');\n  formData.append('tune[prompt_attributes][callback]', 'https://optional-callback-url.com/webhooks/astria_prompts?user_id=1');\n  // Load all JPGs from ./samples directory and append to FormData\n  let files = fs.readdirSync('./samples');\n  files.forEach(file => {\n    if(file.endsWith('.jpg')) {\n      formData.append('tune[images][]', fs.createReadStream(`./samples/${file}`), file);\n    }\n  });\n  formData.append('tune[callback]', 'https://optional-callback-url.com/to-your-service-when-ready?user_id=1');\n\n  let options = {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + API_KEY\n    },\n    body: formData\n  };\n  // Hard coded pack id 43 for corporate headshots from the gallery - https://www.astria.ai/gallery/packs\n  return fetch(DOMAIN + '/p/43/tunes', options)\n    .then(r => r.json())\n    .then(r => console.log(r));\n}\n\ncreateTune();\n\n"))),(0,r.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import requests\nheaders = {\'Authorization\': f\'Bearer {API_KEY}\'}\n\ndef load_image(file_path):\n  with open(file_path, "rb") as f:\n    return f.read()\n\n# Assuming `prompts` and `tune.images` are already defined in your context\n\ndata = {\n  "tune[title]": "John Doe - UUID - 1234-6789-1234-56789",\n  "tune[name]": "man",\n}\nfiles = []\n\nfor image in tune.images:\n  image_data = load_image(image)  # Assuming image is a file path\n  files.append(("tune[images][]", image_data))\n\nAPI_URL = \'https://api.astria.ai/p/43/tunes\'\nresponse = requests.post(API_URL, data=data, files=files, headers=headers)\nresponse.raise_for_status()\n\n')))),(0,r.kt)("h4",{id:"response"},"Response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n  "id": 1,\n  "title": "John Doe",\n  "name": "woman",\n  "eta": "2023-10-02T14:32:40.363Z",\n  "trained_at": "2023-10-02T14:32:40.363Z",\n  "started_training_at": "2023-10-02T14:32:05.229Z",\n  "expires_at": "2023-11-01T14:32:40.363Z",\n  "created_at": "2023-10-02T14:32:05.067Z",\n  "updated_at": "2023-10-02T14:32:40.363Z",\n  "url": "https://www.astria.ai/tunes/788416.json",\n  "orig_images": [\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock",\n    "https://sdbooth2-production.s3.amazonaws.com/mock"\n  ]\n}\n')))))}h.isMDXComponent=!0}}]);